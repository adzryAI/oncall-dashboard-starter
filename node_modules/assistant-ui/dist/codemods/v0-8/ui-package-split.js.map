{"version":3,"sources":["../../../src/codemods/v0-8/ui-package-split.ts"],"sourcesContent":["import { createTransformer } from \"../utils/createTransformer\";\n\nconst reactUIExports: string[] = [\n  \"ThreadConfigProvider\",\n  \"useThreadConfig\",\n  \"ThreadConfig\",\n  \"ThreadWelcomeConfig\",\n  \"UserMessageConfig\",\n  \"AssistantMessageConfig\",\n  \"StringsConfig\",\n  \"SuggestionConfig\",\n  \"ThreadConfigProviderProps\",\n  \"AssistantActionBar\",\n  \"AssistantMessage\",\n  \"AssistantModal\",\n  \"BranchPicker\",\n  \"Composer\",\n  \"MessagePart\",\n  \"AttachmentUI\",\n  \"EditComposer\",\n  \"Thread\",\n  \"ThreadList\",\n  \"ThreadListItem\",\n  \"ThreadWelcome\",\n  \"UserMessage\",\n  \"makeMarkdownText\",\n  \"MakeMarkdownTextProps\",\n  \"CodeHeader\",\n];\n\nconst migrateAssistantUI = createTransformer(({ j, root, markAsChanged }) => {\n  const sourcesToMigrate: string[] = [\n    \"@assistant-ui/react\",\n    \"@assistant-ui/react-markdown\",\n  ];\n  const movedSpecifiers: any[] = [];\n  let lastMigratedImportPath: any = null;\n\n  root\n    .find(j.ImportDeclaration)\n    .filter((path: any) => sourcesToMigrate.includes(path.value.source.value))\n    .forEach((path: any) => {\n      let hadMigratedSpecifiers = false;\n      const remainingSpecifiers: any[] = [];\n      path.value.specifiers.forEach((specifier: any) => {\n        if (\n          j.ImportSpecifier.check(specifier) &&\n          reactUIExports.includes(specifier.imported.name as string)\n        ) {\n          movedSpecifiers.push(specifier);\n          hadMigratedSpecifiers = true;\n        } else {\n          remainingSpecifiers.push(specifier);\n        }\n      });\n      if (hadMigratedSpecifiers) {\n        lastMigratedImportPath = path;\n      }\n      if (remainingSpecifiers.length === 0) {\n        j(path).remove();\n        markAsChanged();\n      } else if (remainingSpecifiers.length !== path.value.specifiers.length) {\n        path.value.specifiers = remainingSpecifiers;\n        markAsChanged();\n      }\n    });\n\n  if (movedSpecifiers.length > 0) {\n    const existingReactUIImport = root.find(j.ImportDeclaration, {\n      source: { value: \"@assistant-ui/react-ui\" },\n    });\n    if (existingReactUIImport.size() > 0) {\n      existingReactUIImport.forEach((path: any) => {\n        movedSpecifiers.forEach((specifier: any) => {\n          if (\n            !path.value.specifiers.some(\n              (s: any) => s.imported.name === specifier.imported.name,\n            )\n          ) {\n            path.value.specifiers.push(specifier);\n          }\n        });\n      });\n    } else {\n      const newImport = j.importDeclaration(\n        movedSpecifiers,\n        j.literal(\"@assistant-ui/react-ui\"),\n      );\n      if (lastMigratedImportPath) {\n        j(lastMigratedImportPath).insertAfter(newImport);\n      } else {\n        const firstImport = root.find(j.ImportDeclaration).at(0);\n        if (firstImport.size() > 0) {\n          firstImport.insertBefore(newImport);\n        } else {\n          root.get().node.program.body.unshift(newImport);\n        }\n      }\n    }\n    markAsChanged();\n  }\n\n  const cssReplacements: Record<string, string> = {\n    \"@assistant-ui/react/styles/index.css\":\n      \"@assistant-ui/react-ui/styles/index.css\",\n    \"@assistant-ui/react/styles/modal.css\":\n      \"@assistant-ui/react-ui/styles/modal.css\",\n    \"@assistant-ui/react-markdown/styles/markdown.css\":\n      \"@assistant-ui/react-ui/styles/markdown.css\",\n  };\n\n  root.find(j.ImportDeclaration).forEach((path: any) => {\n    const sourceValue: string = path.value.source.value;\n    if (cssReplacements[sourceValue]) {\n      path.value.source = j.literal(cssReplacements[sourceValue]);\n      markAsChanged();\n    }\n  });\n\n  let removedMarkdownPlugin = false;\n  root\n    .find(j.CallExpression, { callee: { name: \"require\" } })\n    .filter((path: any) => {\n      const arg = path.value.arguments[0];\n      return (\n        arg &&\n        (arg.type === \"Literal\" || arg.type === \"StringLiteral\") &&\n        arg.value === \"@assistant-ui/react-markdown/tailwindcss\"\n      );\n    })\n    .forEach((path: any) => {\n      removedMarkdownPlugin = true;\n      const parent = path.parentPath;\n      if (\n        parent &&\n        parent.value &&\n        parent.value.type === \"VariableDeclarator\"\n      ) {\n        const varDecl = parent.parentPath;\n        if (\n          varDecl &&\n          varDecl.value.declarations &&\n          varDecl.value.declarations.length === 1\n        ) {\n          j(varDecl).remove();\n        } else {\n          varDecl.value.declarations = varDecl.value.declarations.filter(\n            (decl: any) => decl !== parent.value,\n          );\n        }\n        markAsChanged();\n      } else {\n        j(path).remove();\n        markAsChanged();\n      }\n    });\n\n  root\n    .find(j.CallExpression, { callee: { name: \"require\" } })\n    .filter((path: any) => {\n      const arg = path.value.arguments[0];\n      return (\n        arg &&\n        (arg.type === \"Literal\" || arg.type === \"StringLiteral\") &&\n        arg.value === \"@assistant-ui/react/tailwindcss\"\n      );\n    })\n    .forEach((path: any) => {\n      path.value.arguments[0].value = \"@assistant-ui/react-ui/tailwindcss\";\n      markAsChanged();\n      if (removedMarkdownPlugin) {\n        if (\n          path.parentPath &&\n          path.parentPath.value &&\n          path.parentPath.value.type === \"CallExpression\" &&\n          path.parentPath.value.arguments.length > 0\n        ) {\n          const configObj = path.parentPath.value.arguments[0];\n          if (configObj && configObj.type === \"ObjectExpression\") {\n            const componentsProp = configObj.properties.find((prop: any) => {\n              return (\n                (prop.key.name === \"components\" ||\n                  prop.key.value === \"components\") &&\n                prop.value.type === \"ArrayExpression\"\n              );\n            });\n            if (componentsProp) {\n              const componentsArray = componentsProp.value.elements;\n              const hasMarkdown = componentsArray.some(\n                (el: any) => el.type === \"Literal\" && el.value === \"markdown\",\n              );\n              if (!hasMarkdown) {\n                componentsArray.push(j.literal(\"markdown\"));\n                markAsChanged();\n              }\n            }\n          }\n        }\n      }\n    });\n});\n\nexport default migrateAssistantUI;\n"],"mappings":"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","names":[]}
{"version":3,"sources":["../../../src/codemods/v0-9/edge-package-split.ts"],"sourcesContent":["import { createTransformer } from \"../utils/createTransformer\";\n\n// Chat runtime and converter exports moved to react-ai-sdk\nconst reactAiSdkExports: string[] = [\n  // Chat Runtime (replaces edge runtime)\n  \"useChatRuntime\",\n\n  // Core Types\n  \"CoreMessage\",\n  \"CoreUserMessage\",\n  \"CoreAssistantMessage\",\n  \"CoreSystemMessage\",\n  \"CoreUserMessagePart\",\n  \"CoreAssistantMessagePart\",\n  \"CoreToolCallMessagePart\",\n\n  // Core message converters\n  \"fromCoreMessages\",\n  \"fromCoreMessage\",\n  \"toCoreMessages\",\n  \"toCoreMessage\",\n\n  // Language model converters\n  \"toLanguageModelMessages\",\n  \"toLanguageModelTools\",\n  \"fromLanguageModelMessages\",\n  \"fromLanguageModelTools\",\n  \"useDangerousInBrowserRuntime\",\n];\n\nconst migrateToEdgePackage = createTransformer(({ j, root, markAsChanged }) => {\n  const sourcesToMigrate: string[] = [\"@assistant-ui/react\"];\n  const movedAiSdkSpecifiers: any[] = [];\n  let lastMigratedImportPath: any = null;\n\n  root\n    .find(j.ImportDeclaration)\n    .filter((path: any) => sourcesToMigrate.includes(path.value.source.value))\n    .forEach((path: any) => {\n      let hadMigratedSpecifiers = false;\n      const remainingSpecifiers: any[] = [];\n      path.value.specifiers.forEach((specifier: any) => {\n        if (\n          j.ImportSpecifier.check(specifier) &&\n          reactAiSdkExports.includes(specifier.imported.name as string)\n        ) {\n          movedAiSdkSpecifiers.push(specifier);\n          hadMigratedSpecifiers = true;\n        } else {\n          remainingSpecifiers.push(specifier);\n        }\n      });\n      if (hadMigratedSpecifiers) {\n        lastMigratedImportPath = path;\n      }\n      if (remainingSpecifiers.length === 0) {\n        j(path).remove();\n        markAsChanged();\n      } else if (remainingSpecifiers.length !== path.value.specifiers.length) {\n        path.value.specifiers = remainingSpecifiers;\n        markAsChanged();\n      }\n    });\n\n  // Add imports for react-ai-sdk (all edge-related imports now go here)\n  if (movedAiSdkSpecifiers.length > 0) {\n    const existingAiSdkImport = root.find(j.ImportDeclaration, {\n      source: { value: \"@assistant-ui/react-ai-sdk\" },\n    });\n    if (existingAiSdkImport.size() > 0) {\n      existingAiSdkImport.forEach((path: any) => {\n        movedAiSdkSpecifiers.forEach((specifier: any) => {\n          if (\n            !path.value.specifiers.some(\n              (s: any) => s.imported.name === specifier.imported.name,\n            )\n          ) {\n            path.value.specifiers.push(specifier);\n          }\n        });\n      });\n    } else {\n      const newImport = j.importDeclaration(\n        movedAiSdkSpecifiers,\n        j.literal(\"@assistant-ui/react-ai-sdk\"),\n      );\n      if (lastMigratedImportPath) {\n        j(lastMigratedImportPath).insertAfter(newImport);\n      } else {\n        const firstImport = root.find(j.ImportDeclaration).at(0);\n        if (firstImport.size() > 0) {\n          firstImport.insertBefore(newImport);\n        } else {\n          root.get().node.program.body.unshift(newImport);\n        }\n      }\n    }\n    markAsChanged();\n  }\n\n  // Migrate imports from edge/converters\n  root.find(j.ImportDeclaration).forEach((path: any) => {\n    const sourceValue: string = path.value.source.value;\n    if (\n      sourceValue.startsWith(\"@assistant-ui/react/\") &&\n      (sourceValue.includes(\"edge/\") ||\n        sourceValue.includes(\"dangerous-in-browser/\"))\n    ) {\n      path.value.source = j.literal(\n        sourceValue.replace(\n          \"@assistant-ui/react/\",\n          \"@assistant-ui/react-ai-sdk/\",\n        ),\n      );\n      markAsChanged();\n    }\n  });\n\n  // Migrate language model converter imports from react-edge to react-ai-sdk\n  root.find(j.ImportDeclaration).forEach((path: any) => {\n    const sourceValue: string = path.value.source.value;\n    if (\n      sourceValue === \"@assistant-ui/react-edge\" ||\n      sourceValue === \"@assistant-ui/react\"\n    ) {\n      let hasLanguageModelConverters = false;\n      const remainingSpecifiers: any[] = [];\n      const aiSdkSpecifiers: any[] = [];\n\n      path.value.specifiers.forEach((specifier: any) => {\n        if (\n          j.ImportSpecifier.check(specifier) &&\n          reactAiSdkExports.includes(specifier.imported.name as string)\n        ) {\n          aiSdkSpecifiers.push(specifier);\n          hasLanguageModelConverters = true;\n        } else {\n          remainingSpecifiers.push(specifier);\n        }\n      });\n\n      if (hasLanguageModelConverters) {\n        if (remainingSpecifiers.length === 0) {\n          j(path).remove();\n        } else {\n          path.value.specifiers = remainingSpecifiers;\n        }\n\n        const existingAiSdkImport = root.find(j.ImportDeclaration, {\n          source: { value: \"@assistant-ui/react-ai-sdk\" },\n        });\n\n        if (existingAiSdkImport.size() > 0) {\n          existingAiSdkImport.forEach((importPath: any) => {\n            aiSdkSpecifiers.forEach((specifier: any) => {\n              if (\n                !importPath.value.specifiers.some(\n                  (s: any) => s.imported.name === specifier.imported.name,\n                )\n              ) {\n                importPath.value.specifiers.push(specifier);\n              }\n            });\n          });\n        } else {\n          const newImport = j.importDeclaration(\n            aiSdkSpecifiers,\n            j.literal(\"@assistant-ui/react-ai-sdk\"),\n          );\n          j(path).insertAfter(newImport);\n        }\n\n        markAsChanged();\n      }\n    }\n  });\n});\n\nexport default migrateToEdgePackage;\n"],"mappings":"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","names":[]}
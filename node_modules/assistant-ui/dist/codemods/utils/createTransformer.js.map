{"version":3,"sources":["../../../src/codemods/utils/createTransformer.ts"],"sourcesContent":["import { FileInfo, API, JSCodeshift, Collection } from \"jscodeshift\";\n\nexport type TransformerFunction = (\n  context: TransformContext,\n  fileInfo: FileInfo,\n  api: API,\n  options: any,\n) => void;\n\nexport interface TransformContext {\n  /**\n   * The jscodeshift API object.\n   */\n  j: JSCodeshift;\n\n  /**\n   * The root collection of the AST.\n   */\n  root: Collection<any>;\n\n  markAsChanged: () => void;\n}\n\nexport function createTransformer(transformFn: TransformerFunction) {\n  return function transformer(fileInfo: FileInfo, api: API, options: any) {\n    const j = api.jscodeshift;\n    const root = j(fileInfo.source);\n\n    let isChanged = false;\n    const context: TransformContext = {\n      j,\n      root,\n      markAsChanged: () => {\n        isChanged = true;\n      },\n    };\n\n    transformFn(context, fileInfo, api, options);\n    return isChanged ? root.toSource() : null;\n  };\n}\n"],"mappings":";AAuBO,SAAS,kBAAkB,aAAkC;AAClE,SAAO,SAAS,YAAY,UAAoB,KAAU,SAAc;AACtE,UAAM,IAAI,IAAI;AACd,UAAM,OAAO,EAAE,SAAS,MAAM;AAE9B,QAAI,YAAY;AAChB,UAAM,UAA4B;AAAA,MAChC;AAAA,MACA;AAAA,MACA,eAAe,MAAM;AACnB,oBAAY;AAAA,MACd;AAAA,IACF;AAEA,gBAAY,SAAS,UAAU,KAAK,OAAO;AAC3C,WAAO,YAAY,KAAK,SAAS,IAAI;AAAA,EACvC;AACF;","names":[]}
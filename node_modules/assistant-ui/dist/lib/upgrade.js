// src/lib/upgrade.ts
import debug from "debug";
import { transform, getRelevantFiles } from "./transform.js";
import { SingleBar, Presets } from "cli-progress";
import installReactUILib from "./install-ui-lib.js";
import installEdgeLib from "./install-edge-lib.js";
import installAiSdkLib from "./install-ai-sdk-lib.js";
var bundle = [
  "v0-8/ui-package-split",
  "v0-9/edge-package-split",
  "v0-11/content-part-to-message-part"
];
var log = debug("codemod:upgrade");
var error = debug("codemod:upgrade:error");
async function upgrade(options) {
  const cwd = process.cwd();
  log("Starting upgrade...");
  console.log("Analyzing codebase...");
  const relevantFiles = getRelevantFiles(cwd);
  const fileCount = relevantFiles.length;
  console.log(`Found ${fileCount} files to process.`);
  const totalWork = fileCount * bundle.length;
  let completedWork = 0;
  const bar = new SingleBar(
    {
      format: "Progress |{bar}| {percentage}% | ETA: {eta}s || {status}",
      hideCursor: true
    },
    Presets.shades_classic
  );
  bar.start(totalWork, 0, { status: "Starting..." });
  const allErrors = [];
  for (const codemod of bundle) {
    bar.update(completedWork, { status: `Running ${codemod}...` });
    const errors = transform(codemod, cwd, options, {
      logStatus: false,
      onProgress: (processedFiles) => {
        completedWork = bundle.indexOf(codemod) * fileCount + processedFiles;
        bar.update(Math.min(completedWork, totalWork), {
          status: `Running ${codemod} (${processedFiles}/${fileCount} files)`
        });
      },
      relevantFiles
      // Pass the pre-computed relevant files
    });
    allErrors.push(...errors);
    completedWork = (bundle.indexOf(codemod) + 1) * fileCount;
    bar.update(completedWork, { status: `Completed ${codemod}` });
  }
  bar.update(totalWork, { status: "Checking dependencies..." });
  bar.stop();
  if (allErrors.length > 0) {
    log("Some codemods did not apply successfully to all files. Details:");
    allErrors.forEach(({ transform: transform2, filename, summary }) => {
      error(`codemod=${transform2}, path=${filename}, summary=${summary}`);
    });
  }
  console.log("Checking for package dependencies...");
  await installReactUILib();
  await installEdgeLib();
  await installAiSdkLib();
  log("Upgrade complete.");
  console.log("\u2705 Upgrade complete!");
}
export {
  upgrade
};
//# sourceMappingURL=upgrade.js.map
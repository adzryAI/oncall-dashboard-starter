{"version":3,"sources":["../../src/commands/upgrade.ts"],"sourcesContent":["import { Command } from \"commander\";\nimport { transform } from \"../lib/transform\";\nimport { upgrade } from \"../lib/upgrade\";\nimport debug from \"debug\";\n\nexport interface TransformOptions {\n  dry?: boolean;\n  print?: boolean;\n  verbose?: boolean;\n  jscodeshift?: string;\n}\n\nconst error = debug(\"codemod:error\");\ndebug.enable(\"codemod:*\");\n\nconst addTransformOptions = (command: Command): Command => {\n  return command\n    .option(\"-d, --dry\", \"Dry run (no changes are made to files)\")\n    .option(\"-p, --print\", \"Print transformed files to stdout\")\n    .option(\"--verbose\", \"Show more information about the transform process\")\n    .option(\n      \"-j, --jscodeshift <options>\",\n      \"Pass options directly to jscodeshift\",\n    );\n};\n\nexport const codemodCommand = addTransformOptions(\n  new Command()\n    .name(\"codemod\")\n    .description(\"CLI tool for running codemods\")\n    .argument(\"<codemod>\", \"Codemod to run (e.g., rewrite-framework-imports)\")\n    .argument(\"<source>\", \"Path to source files or directory to transform\"),\n).action((codemod, source, options: TransformOptions) => {\n  try {\n    transform(codemod, source, options);\n  } catch (err: any) {\n    error(`Error transforming: ${err}`);\n    error(err.stack);\n    process.exit(1);\n  }\n});\n\nexport const upgradeCommand = addTransformOptions(\n  new Command()\n    .command(\"upgrade\")\n    .description(\"Upgrade ai package dependencies and apply codemods\"),\n).action((options: TransformOptions) => {\n  try {\n    upgrade(options);\n  } catch (err: any) {\n    error(`Error upgrading: ${err}`);\n    error(err.stack);\n    process.exit(1);\n  }\n});\n"],"mappings":";AAAA,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,eAAe;AACxB,OAAO,WAAW;AASlB,IAAM,QAAQ,MAAM,eAAe;AACnC,MAAM,OAAO,WAAW;AAExB,IAAM,sBAAsB,CAAC,YAA8B;AACzD,SAAO,QACJ,OAAO,aAAa,wCAAwC,EAC5D,OAAO,eAAe,mCAAmC,EACzD,OAAO,aAAa,mDAAmD,EACvE;AAAA,IACC;AAAA,IACA;AAAA,EACF;AACJ;AAEO,IAAM,iBAAiB;AAAA,EAC5B,IAAI,QAAQ,EACT,KAAK,SAAS,EACd,YAAY,+BAA+B,EAC3C,SAAS,aAAa,kDAAkD,EACxE,SAAS,YAAY,gDAAgD;AAC1E,EAAE,OAAO,CAAC,SAAS,QAAQ,YAA8B;AACvD,MAAI;AACF,cAAU,SAAS,QAAQ,OAAO;AAAA,EACpC,SAAS,KAAU;AACjB,UAAM,uBAAuB,GAAG,EAAE;AAClC,UAAM,IAAI,KAAK;AACf,YAAQ,KAAK,CAAC;AAAA,EAChB;AACF,CAAC;AAEM,IAAM,iBAAiB;AAAA,EAC5B,IAAI,QAAQ,EACT,QAAQ,SAAS,EACjB,YAAY,oDAAoD;AACrE,EAAE,OAAO,CAAC,YAA8B;AACtC,MAAI;AACF,YAAQ,OAAO;AAAA,EACjB,SAAS,KAAU;AACjB,UAAM,oBAAoB,GAAG,EAAE;AAC/B,UAAM,IAAI,KAAK;AACf,YAAQ,KAAK,CAAC;AAAA,EAChB;AACF,CAAC;","names":[]}